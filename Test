// Business Insights Dashboard - Complete Source Code with Deployment Guide

// Frontend - React.js Structure with Mock Data
import React, { useState } from 'react';
import ReactDOM from 'react-dom';
import './App.css';

const App = () => {
  const [search, setSearch] = useState("");

  const mockData = [
    {
      name: "Example Company 1",
      mission: "To innovate and lead.",
      vision: "A world empowered by technology.",
      industry: "Technology",
      employees: 500,
      financials: {
        incomeStatement: "$5M",
        balanceSheet: "$10M",
        cashFlow: "$3M",
      },
      contacts: [
        { name: "John Doe", role: "Sales Leader", email: "john@example.com" },
        { name: "Jane Smith", role: "HR Manager", email: "jane@example.com" },
      ],
    },
    {
      name: "Example Company 2",
      mission: "To build a sustainable future.",
      vision: "A cleaner, greener world.",
      industry: "Renewable Energy",
      employees: 300,
      financials: {
        incomeStatement: "$2M",
        balanceSheet: "$5M",
        cashFlow: "$1M",
      },
      contacts: [
        { name: "Alice Green", role: "VP of Sales", email: "alice@example.com" },
        { name: "Bob Brown", role: "Talent Development", email: "bob@example.com" },
      ],
    },
  ];

  const filteredData = mockData.filter((company) =>
    company.name.toLowerCase().includes(search.toLowerCase())
  );

  return (
    <div className="App">
      <header className="App-header">
        <h1>Business Insights Dashboard</h1>
      </header>
      <main>
        {/* Search Bar */}
        <section id="search-bar">
          <input
            type="text"
            placeholder="Search by Company Name"
            value={search}
            onChange={(e) => setSearch(e.target.value)}
          />
          <button>Search</button>
        </section>

        {/* Dashboard Panels */}
        <section id="dashboard-panels">
          {filteredData.map((company, index) => (
            <div key={index} className="panel">
              <h2>{company.name}</h2>
              <p><strong>Mission:</strong> {company.mission}</p>
              <p><strong>Vision:</strong> {company.vision}</p>
              <p><strong>Industry:</strong> {company.industry}</p>
              <p><strong>Employees:</strong> {company.employees}</p>

              <h3>Financials:</h3>
              <p>Income Statement: {company.financials.incomeStatement}</p>
              <p>Balance Sheet: {company.financials.balanceSheet}</p>
              <p>Cash Flow: {company.financials.cashFlow}</p>

              <h3>Contacts:</h3>
              <ul>
                {company.contacts.map((contact, i) => (
                  <li key={i}>
                    {contact.name} - {contact.role} (<a href={`mailto:${contact.email}`}>{contact.email}</a>)
                  </li>
                ))}
              </ul>
            </div>
          ))}
        </section>
      </main>
      <footer>
        <p>&copy; 2025 Business Insights Dashboard</p>
      </footer>
    </div>
  );
};

ReactDOM.render(<App />, document.getElementById('root'));

// Deployment Instructions
// 1. Install Node.js and npm:
//    - Download and install Node.js from https://nodejs.org.
// 2. Clone the repository:
//    - Run `git clone <repository-link>` to clone the source code.
// 3. Navigate to the project directory:
//    - Run `cd <project-directory>`.
// 4. Install dependencies:
//    - Run `npm install` to install required packages.
// 5. Run the application locally:
//    - Run `npm start` to launch the app at `http://localhost:3000`.

// To deploy on Netlify:
// 1. Build the app:
//    - Run `npm run build` to create an optimized production build in the `build` folder.
// 2. Deploy the build folder:
//    - Drag and drop the `build` folder into the Netlify dashboard or use the Netlify CLI.
// 3. Follow the prompts to publish the site.

// To deploy on Heroku:
// 1. Set up a Heroku account and install the Heroku CLI.
// 2. Initialize a git repository:
//    - Run `git init`.
//    - Run `heroku create` to create a new Heroku app.
// 3. Push the code to Heroku:
//    - Run `git add .`, `git commit -m "Initial commit"`, and `git push heroku main`.
// 4. Open the app:
//    - Run `heroku open` to view the live application.

// To deploy on Render:
// 1. Create an account on Render (https://render.com).
// 2. Create a new web service and connect your repository.
// 3. Specify the build command (`npm install && npm run build`) and start command (`npm start`).
// 4. Deploy the app and get your live link.
